
<!--
<embed src="test.svg" width="500" height="500" type="image/svg+xml" /> 

<div id="livemapsvg" style="width: 500px; height: 500px;"></div>
-->


--------------------


$template->usejquerysvg(true);


	private $usejquerysvg = false;


	public function usejquerysvg($usejquerysvg) {
		$this->usejquerysvg = $usejquerysvg;
	}



<link rel="stylesheet" type="text/css" href="{$link_base_path}resources/template/css/jquery.svg.css">


		if ($this->usejquerysvg == true) {
			$headeraddin_html = <<<EOHTML
<!--//http://keith-wood.name/svg.html//-->
<script type="text/javascript" src="{$link_base_path}resources/template/javascript/jquery/jquery-1.3.2.js"></script>
<script type="text/javascript" src="{$link_base_path}resources/template/javascript/jquery/jquery.svg.js"></script>

{$this->headeraddin_html}
EOHTML;
		} else {
			$headeraddin_html = $this->headeraddin_html;
		}



--------------


$(function() {
	$('#svgarea').svg({onLoad: drawInitial});
	$('button').click(drawShape);
});

function drawInitial(svg) {

	/*
	svg.circle(75, 75, 50, {fill: 'none', stroke: 'red', 'stroke-width': 3});
	var g = svg.group({stroke: 'black', 'stroke-width': 2});
	svg.line(g, 15, 75, 135, 75);
	svg.line(g, 75, 15, 75, 135);
	*/




var myrect = svg.rect(25, 25, 150, '25%', 10, 10, {fill: 'none', stroke: 'blue', strokeWidth: 6, transform: 'rotate(0, 100, 75)'});

$(myrect).animate({svgWidth: 200, svgHeight: '30%', svgStroke: 'aqua', svgStrokeWidth: '+=7', svgTransform: 'rotate(60, 100, 75)'}, 2000);


    // Using multiple unit types within one animation.




      $("#block").animate({ 
        width: "70%",
        opacity: 0.4,
        marginLeft: "0.6in",
        fontSize: "3em", 
        borderWidth: "10px"
      }, 1500 );



}

var colours = ['purple', 'red', 'orange', 'yellow', 'lime', 'green', 'blue', 'navy', 'black'];

function drawShape() {
	var shape = this.id;
	var svg = $('#svgarea').svg('get');
	if (shape == 'rect') {






		svg.rect(random(300), random(200), random(100) + 100, random(100) + 100,
			{fill: colours[random(9)], stroke: colours[random(9)],
			'stroke-width': random(5) + 1});
	}
	else if (shape == 'line') {
		svg.line(random(400), random(300), random(400), random(300),
			{stroke: colours[random(9)], 'stroke-width': random(5) + 1});
	}
	else if (shape == 'circle') {
		svg.circle(random(300) + 50, random(200) + 50, random(80) + 20,
			{fill: colours[random(9)], stroke: colours[random(9)],
			'stroke-width': random(5) + 1});
	}
	else if (shape == 'ellipse') {
		svg.ellipse(random(300) + 50, random(200) + 50, random(80) + 20, random(80) + 20,
			{fill: colours[random(9)], stroke: colours[random(9)],
			'stroke-width': random(5) + 1});
	}
	else if (shape == 'clear') {
		svg.clear();
	}
}

function random(range) {
	return Math.floor(Math.random() * range);
}

<!--//
<h1>jQuery SVG Basics</h1>
<p>This page demonstrates the very basics of the <a href="http://keith-wood.name/svg.html">jQuery SVG plugin</a>.
	It contains the minimum requirements for using the plugin and
	can be used as the basis for your own experimentation.</p>
<p>The page creates an SVG document in the area below and draws an initial display.
	The buttons then add randomly sized and coloured shapes on demand.</p>
<p>For more detail see the <a href="http://keith-wood.name/svgRef.html">documentation reference</a> page.</p>
<div id="svgarea" style="width: 500px; height: 500px"></div>
<p><button id="rect">Add rectangle</button> <button id="line">Add line</button>
	<button id="circle">Add circle</button> <button id="ellipse">Add ellipse</button>
	<button id="clear">Clear</button></p>


<div id="block">Hello!</div>
//-->
